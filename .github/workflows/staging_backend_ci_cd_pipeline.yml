name: staging_backend_ci_cd_pipeline

on:
  push:
    branches:
      - 'staging'
    paths:
      - 'backend/**'
  workflow_dispatch:
jobs:

  build-database:
    runs-on: self-hosted

    steps:
    - name: Create a network for staging
      run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker network create staging-network || true
    - name: Stop old docker container
      run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker stop ${{secrets.MYSQL_DATABASE_STAGING}} || true
    - name: Run Docker Container
      run: |
        echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker run --rm -d \
          --name ${{secrets.MYSQL_DATABASE_STAGING}} \
          -v data-staging:/var/lib/mysql \
          -e MYSQL_DATABASE=${{secrets.MYSQL_DATABASE_STAGING}} \
          -e MYSQL_USER=${{secrets.MYSQL_USER_STAGING}} \
          -e MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD_STAGING}} \
          -e MYSQL_ROOT_PASSWORD=${{secrets.MYSQL_ROOT_PASSWORD_STAGING}} \
          --network staging-network \
          mysql:8.3.0 || true
          
  build-backend-image-and-push:
    runs-on: ubuntu-latest
    needs: build-database
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: Login Dockerhub
      env:
        DOCKER_HUB_USERNAME: ${{secrets.DOCKER_HUB_USERNAME}}
        DOCKER_HUB_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
      run: docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
      
    - name: Build the Docker image
      run: docker build -t ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_BACKEND_IMAGE_STAGING}} ./backend
           
    - name: Push to Dockerhub
      run: docker push ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_BACKEND_IMAGE_STAGING}}:latest

  pull-backend-image-and-run-container:
    runs-on: self-hosted
    needs: build-backend-image-and-push
    steps:
    - name: Create a network for staging
      run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker network create staging-network || true
    - name: Pull Docker image
      run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker pull ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_BACKEND_IMAGE_STAGING}}:latest
    - name: Stop old docker container
      run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker stop backend-staging || true
    - name: Run Docker Container
      run: |
        echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker run --rm -d \
          -p ${{secrets.BACKEND_HOST_PORT_STAGING}}:${{secrets.BACKEND_CONTAINER_PORT_STAGING}} \
          -e BACKEND_CONTAINER_PORT=${{secrets.BACKEND_CONTAINER_PORT_STAGING}} \
          -e MYSQL_HOST=${{secrets.MYSQL_DATABASE_STAGING}} \
          -e MYSQL_PORT=${{secrets.MYSQL_CONTAINER_PORT_STAGING}} \
          -e MYSQL_DATABASE=${{secrets.MYSQL_DATABASE_STAGING}} \
          -e MYSQL_USER=${{secrets.MYSQL_USER_STAGING}} \
          -e MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD_STAGING}} \
          -e FRONTEND_HOST_DOMAIN=${{secrets.FRONTEND_HOST_DOMAIN_STAGING}} \
          --name backend-staging \
          --network staging-network \
          ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_BACKEND_IMAGE_STAGING}}:latest
